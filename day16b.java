package com.shpp.p2p.cs.siskov.adventofcode;

import java.util.LinkedList;

/**
 * This task "Day 16: The Floor Will Be Lava" is from https://adventofcode.com/2023/day/16
 * We need to calculate how many tiles are energized in configuration with the largest number of tiles.
 * Created by Sergii Iskov, 2023. Version 2.0
 */
public class day16b {
    private  static int MAX = 100000000;

    public static void main(String[] args) {
        String[] dataArray = data.split("\n");
        Character[][] map = new Character[dataArray.length][dataArray[0].length()];
        for (int i = 0; i < dataArray.length; i++) {
            for (int j = 0; j < dataArray[0].length(); j++) {
                map[i][j] = dataArray[i].charAt(j);
            }
        }
        int max = 0;
        for (int i = 0; i < map.length; i++) {
            int cur = 0;
            cur = move(map, i, 0, "R", MAX);
            max = Math.max(max, cur);
            cur = move(map, i, map[0].length - 1, "L", MAX);
            max = Math.max(max, cur);
        }
        for (int i = 0; i < map[0].length; i++) {
            int cur = 0;
            cur = move(map, 0, i, "D", MAX);
            max = Math.max(max, cur);
            cur = move(map, map.length - 1, i, "U", MAX);
            max = Math.max(max, cur);
        }
        System.out.println("MAX = " + max);
        // after found max value you must start function for this tiles one`s more time with 300000000 cycles
    }

    private static int move(Character[][] map, int y, int x, String r, int MAX) {
        int[][] logicMap = new int[map.length][map[0].length];
        String startX = "" + x, startY = "" + y;

        LinkedList<String[]> queue = new LinkedList<>();
        queue.offer(new String[]{startX, startY, r});

        int count = 0;
        int result = 0;
        while (!queue.isEmpty() && count < MAX) {
            count +=1;
            String[] pixel = queue.poll();
            int curX = Integer.parseInt(pixel[0]);
            int curY = Integer.parseInt(pixel[1]);
            String dir = pixel[2];
            if (isInMap(map, curX, curY)) {
                logicMap[curY][curX]++;
                if (map[curY][curX] == '.') {
                    if (dir.equals("R")) queue.offer(new String[]{("" + (curX + 1)), "" + curY, "R"});
                    if (dir.equals("L")) queue.offer(new String[]{("" + (curX - 1)), "" + curY, "L"});
                    if (dir.equals("U")) queue.offer(new String[]{"" + curX, "" + (curY - 1), "U"});
                    if (dir.equals("D")) queue.offer(new String[]{"" + curX, "" + (curY + 1), "D"});
                }
                if (map[curY][curX] == '/') {
                    if (dir.equals("R")) queue.offer(new String[]{"" + curX, "" + (curY - 1), "U"});
                    if (dir.equals("L")) queue.offer(new String[]{"" + curX, "" + (curY + 1), "D"});
                    if (dir.equals("U")) queue.offer(new String[]{("" + (curX + 1)), "" + curY, "R"});
                    if (dir.equals("D")) queue.offer(new String[]{("" + (curX - 1)), "" + curY, "L"});
                }
                if (map[curY][curX] == '\\') {
                    if (dir.equals("R")) queue.offer(new String[]{"" + curX, "" + (curY + 1), "D"});
                    if (dir.equals("L")) queue.offer(new String[]{"" + curX, "" + (curY - 1), "U"});
                    if (dir.equals("U")) queue.offer(new String[]{("" + (curX - 1)), "" + curY, "L"});
                    if (dir.equals("D")) queue.offer(new String[]{("" + (curX + 1)), "" + curY, "R"});
                }
                if (map[curY][curX] == '|') {
                    if (dir.equals("R") || dir.equals("L")) {
                        queue.offer(new String[]{"" + curX, "" + (curY - 1), "U"});
                        queue.offer(new String[]{"" + curX, "" + (curY + 1), "D"});
                    }
                    if (dir.equals("U")) queue.offer(new String[]{"" + curX, "" + (curY - 1), "U"});
                    if (dir.equals("D")) queue.offer(new String[]{"" + curX, "" + (curY + 1), "D"});
                }
                if (map[curY][curX] == '-') {
                    if (dir.equals("U") || dir.equals("D")) {
                        queue.offer(new String[]{("" + (curX + 1)), "" + curY, "R"});
                        queue.offer(new String[]{("" + (curX - 1)), "" + curY, "L"});
                    }
                    if (dir.equals("R")) queue.offer(new String[]{("" + (curX + 1)), "" + curY, "R"});
                    if (dir.equals("L")) queue.offer(new String[]{("" + (curX - 1)), "" + curY, "L"});
                }
            }
            if (count % 1000000 == 0) {
//                System.out.print(count + " = ");
//                printSchema2(logicMap);
            }
//            System.out.print("move " + dir + " to [" + curY + ", " + curX + "] -- ");
        }
        result = printSchema(logicMap, map,  y,  x,  r);
        return result;
    }


    private static int printSchema(int[][] logicMap, Character[][] map, int y, int x, String r) {
//        System.out.println();
        int count = 0;
        for (int i = 0; i < logicMap.length; i++) {
//            System.out.print(map[i].toString() + "      ");
            for (int j = 0; j < logicMap[i].length; j++) {
                if (logicMap[i][j] != 0) {
                    count++;
//                    System.out.print("#");
                }
//                else System.out.print(".");
            }
//            System.out.println();
        }
        System.out.println("count = " + count + ", col = " + (x + 1) + ", row = " + (y + 1) + ", direction = " + r);
        return count;
    }
    private static void printSchema2(int[][] logicMap) { // see current result (every 100000 iterations)
        int count = 0;
        for (int i = 0; i < logicMap.length; i++) {
            for (int j = 0; j < logicMap[i].length; j++) {
                if (logicMap[i][j] != 0) {
                    count++;
                }
            }
        }
        System.out.println(count);
    }

    /**
     * Check if current char is in the border of Array
     *
     * @param arr boolean array
     * @param x   coordinate x of char
     * @param y   coordinate y of char
     * @return true if char is in the border of Array
     */
    private static boolean isInMap(Character[][] arr, int x, int y) {
        return x >= 0 && y >= 0 && x <= arr[0].length - 1 && y <= arr.length - 1;
    }

    private static String data2 =
            ".|...\\....\n" + // 0
                    "|.-.\\.....\n" + // 1
                    ".....|-...\n" +  // 2
                    "........|.\n" +  // 3
                    "..........\n" +  // 4
                    ".........\\\n" + // 5
                    "..../.\\\\..\n" +// 6
                    ".-.-/..|..\n" +  // 7
                    ".|....-|.\\\n" + // 8
                    "..//.|....";     // 9
    private static String data = "\\....-./...............\\.............-../...|......../........../...............|......................./.....\n" +
            "\\.......\\..-.\\/|..........|......|./..........|.../..................-...................................|....\n" +
            ".|........................................./...|...........................-.........../..............\\....../\n" +
            ".-............................|....-./|.........-................/.-./................|...|/..............-...\n" +
            "/....................\\..........\\.//.....-..-.........................../\\................|.....-/...\\........\n" +
            "...........................|..|..\\...-......\\............................../.-...|...-....../...-./.....\\.....\n" +
            "..|......-\\.....\\.........\\................../...|...|..\\-........................................./..........\n" +
            "............../..............|......../.....................\\................/|.....\\...........\\...-.........\n" +
            ".....-................./-.\\..\\..........................-.\\|.........../..................../.|............-..\n" +
            "/..........|.........-....-.............|....................................../...\\./................-.....-.\n" +
            "../|.....\\|...|./.................../....../...../\\/........\\.......|./..-...................................|\n" +
            ".-./......|.........|.......\\....\\-..........................-..\\/.../.....-.../...|....\\...........-...../...\n" +
            "....................|................................../....-.......\\......|..-...............................\n" +
            "......-............../....|..........-..../..........--.................../..|...|...\\.............-....\\...|.\n" +
            ".............|...................-......-...............-..|.-..-.........|..\\......|......|......./..........\n" +
            "......-....|.....\\.................|\\......................./..|.........-....|.....\\.....|........-.........|\n" +
            ".....\\............\\..\\...................|.../...\\.....-.-.\\.......|....../\\.........|........................\n" +
            ".........\\./|\\........................./........../............................../..\\...-....................\\\n" +
            "....|.|...........||......\\........\\...................-......................|.....-.-.....\\.................\n" +
            ".....|.........\\............-..................../\\...|...|../..........-/..-..-.........|.../................\n" +
            "............|...|.............\\.-....................|.....................\\............\\.............-../....\n" +
            "................././......\\................./..\\./\\..............\\./.......|../......|............|..|......|.\n" +
            "...|...../........../..../.............|\\...........|................./.........-......./.....................\n" +
            "../.|......-...........................|........-......|..\\..........|.....\\.../.............../..............\n" +
            ".........................|.............................\\...........-..../.................-............/.....\\\n" +
            ".....\\.....|......./.\\........../......................|....................................../......\\..../..|\n" +
            "...\\............|........\\........\\........../................./..........-....................|\\.............\n" +
            "........................../............................./..../..../..../......|...../..\\......\\.........-.|...\n" +
            "............-.........|..................-...-......\\.........\\............|.|.\\/....././|...|................\n" +
            "......./....|.................................................|......../..-./..../..|.........................\n" +
            "./....-..........-........-......-.-.......-..........|-..\\......|...../........................\\.........../.\n" +
            ".....................|../|.-...........-....\\..\\.................|........-............|...|.|................\n" +
            "..../..........||\\....................-...........|...............-....../........\\......\\|..............\\....\n" +
            ".......\\...|..........|.|.\\....../.....|..|...........|..........-........../..\\...-.............-............\n" +
            "................\\........../.../...-.....\\.....|.-\\......\\.................................-.....|............\n" +
            "......-.....|........\\.............-........./....../.............|..........-.|..........|......\\..-.........\n" +
            ".......................................\\..\\-..........-................../........-................./.........\n" +
            "../.............................-..........-........./..-.................../...../.....|......\\..............\n" +
            ".....\\........\\......-....\\..........................\\/..................\\......\\..............\\|....../......\n" +
            "................./...../....|......../........../..-.....-......../........................................./.\n" +
            "...................|..\\...|....\\..............|..........|.......|..............//\\......\\.......\\...\\..-.....\n" +
            ".........\\........-.............\\........\\....................-.............|..............|\\...|..-..\\.......\n" +
            "..|--../.......\\.........|.\\.......-.........-.........../..|.....-\\......-...|.........................-.\\...\n" +
            "........|...............................-..........................-|.-.|\\\\|\\.........-............../........\n" +
            ".......................-...\\...-.....-.............|..........-..-.\\.....--.../........./......../...........\\\n" +
            "..-..|..|.............................|........................|......................\\...................\\|..\n" +
            "....\\...............\\.\\.|............................-|......-................\\......|......|...............-.\n" +
            "..../\\....\\..................\\.............\\.......\\...............|.-..../.................../.\\....\\........\n" +
            ".......................|..........\\.....-.|........./........../.....|...................../.|/...............\n" +
            "-...........||.........|........||.....................................................................-....\\.\n" +
            "..\\...../.........-......\\....................................../........................|..|...-...|....|.../\n" +
            "..-......\\............................/.....-................./..-..........\\..-.|...........|.-......|..\\...\\\n" +
            ".........................\\...\\................\\.................--......../.........|...|........|............\n" +
            "\\.....\\../..........|.................-............-..............|..................\\................\\....-..\n" +
            "....................-..........|....|..|-.................|.\\.|/../....................|......................\n" +
            "................/|../.../.\\...../.\\../...........|..\\........./....\\.-...................-|......./..........\\\n" +
            ".....\\.........|..................\\....../.........-.....\\......\\.....|....|../|.........|....................\n" +
            "..............-..........././...................|..|.....|.\\/....-............|..../....-.....................\n" +
            "....../.-..........................\\..-..-........../............./.....|............/.......|.\\.......-|....|\n" +
            ".....\\.....................|.........../....-/............-|................/...../............./.............\n" +
            "...............................|.........\\.......\\.......|....|..................|................./..........\n" +
            ".........../.........-........................................-/.......................\\............-.........\n" +
            "..............................................-./......./.\\........./......../...........\\..|..............\\\\.\n" +
            "...........-..|........-.............\\.-|............./...-..................|./.....|................../.\\...\n" +
            "........|..\\..\\|...........-..|........-.......\\..|.............-....\\........./..|../....-\\.........../......\n" +
            "/.....|......|...............||.\\|.............-..\\.-....................../................../...........\\...\n" +
            "../.-./................-................\\.....\\....................\\-...................|-..\\.................\n" +
            "....\\.........................-.........|.|\\......\\../.................\\-....../...|.....|\\.|...........\\.....\n" +
            "......\\.........|.../.......\\...-....../.....|.....-..-\\...................\\\\.-.-||...........................\n" +
            "....-..../...|.......\\............\\.|...\\.................\\....../..../..|.\\......|\\|.|.......................\n" +
            ".../...........\\...................../........................../......-......................................\n" +
            ".-............./......\\......../.........|/-........-....................................-.....-..............\n" +
            "/................../...........-.........-................................\\...................................\n" +
            "...../...../...................../....\\..................................|../.....-................|..........\n" +
            ".\\.....\\.-.....-...\\.\\-......./..........-.-....................-....................\\.....\\...-......-.......\n" +
            "..........................|......-........../....|..........\\.......................................\\.........\n" +
            ".................|\\....\\.............../\\.............-.\\.-.................-...........-..|......./..........\n" +
            "..........|...|.-...|............./..|............-.................|............\\...|.|.\\....................\n" +
            ".........../-....\\./....-................\\..-........\\..............................-.........\\.....|.........\n" +
            ".............|..........\\.................-.................\\\\.........-/.................-|-.........-.......\n" +
            "......................./...........................\\.................|...-.....\\......\\.........../.......|...\n" +
            "....-.....-.......|..--.......\\....\\..................................................../...........\\.........\n" +
            "...........................-.\\..\\......................................\\......|.......-........-.....|........\n" +
            "..-.......\\............................../...................|..-.....................-......./..\\.......-.-..\n" +
            "....|.....-./.................\\......./...........|.............................-....|........-............-..\n" +
            ".....-...............|...........-.......|/..\\-.............|-|........\\...........|./...../..................\n" +
            "|...................-../../.....|./..................|........|....\\..../.....|....................../......./\n" +
            "...............-./\\.......|.......|./....................-....\\...................-.......................|...\n" +
            ".../..........\\...........|.....-..../..-..-.......................|.......|.....-./......................|...\n" +
            "......-..\\..\\........................................|...-................................|.............|.....\n" +
            "...........|............-\\.........../..\\....../.....\\....../...........|...........|.../............\\........\n" +
            "|....-..........-.|...........-..-..................-..\\......\\.......--............|.................|\\\\.....\n" +
            ".........../|.-..........|...\\.|./......../...........\\...........\\/....-..........\\...................../....\n" +
            ".........................-...../.....-./.-............................\\...........-...............\\.\\/....../.\n" +
            "..../........-...................../............../....\\............................./............../.../.....\n" +
            "..................-/...-......................|....................\\......\\..../.........-......./............\n" +
            "....../....................-....\\...-.-.....//...|.....................\\.........\\............\\.-....-../.....\n" +
            "......-.....\\......|.|........................|.................-............../......./......................\n" +
            "....../......../.........\\..................|...|..................................|..-..........|....\\.......\n" +
            "..........\\.../......................\\.......\\/......................-....|.........................../.\\.....\n" +
            ".........-..............-.|...../../............................\\../...............-.............\\......../...\n" +
            "...\\............\\......................\\.\\......\\........\\............\\...-.....|./...-.............|....|.-..\n" +
            "/........................../.-..\\|.-........../.-............./../.........-.../..............................\n" +
            "|....|.\\.....-..|....|....../........|.|...........\\-......................|......|..........................|\n" +
            ".......................\\...........................................\\..........|.............-.../.............\n" +
            ".\\.........|.............|................................\\..................|||........\\...-|................\n" +
            "..........\\...............\\.....................-.....|....................-..........\\|..................|.|.\n" +
            "...|...........\\.|......|/.-../....../.................../......\\.........................|\\.\\..............\\.\n" +
            "..........................................................\\......................./.....--..........|...-..\\..\n" +
            "........-/...-................/........\\..........................\\..../........................\\........-....";

}

